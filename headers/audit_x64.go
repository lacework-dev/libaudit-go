package headers

// SysMapX64 is a mapping between x64 syscall names and their integer values
// The list is taken from x86_64_table.h of auditd library
/*
var SysMapX64 = map[string]int{
*/
func SysMapX64(syscall string) (name int) {
	switch syscall {
	case "read":
		return 0
	case "write":
		return 1
	case "open":
		return 2
	case "close":
		return 3
	case "stat":
		return 4
	case "fstat":
		return 5
	case "lstat":
		return 6
	case "poll":
		return 7
	case "lseek":
		return 8
	case "mmap":
		return 9
	case "mprotect":
		return 10
	case "munmap":
		return 11
	case "brk":
		return 12
	case "rt_sigaction":
		return 13
	case "rt_sigprocmask":
		return 14
	case "rt_sigreturn":
		return 15
	case "ioctl":
		return 16
	case "pread64":
		return 17
	case "pwrite64":
		return 18
	case "readv":
		return 19
	case "writev":
		return 20
	case "access":
		return 21
	case "pipe":
		return 22
	case "select":
		return 23
	case "sched_yield":
		return 24
	case "mremap":
		return 25
	case "msync":
		return 26
	case "mincore":
		return 27
	case "madvise":
		return 28
	case "shmget":
		return 29
	case "shmat":
		return 30
	case "shmctl":
		return 31
	case "dup":
		return 32
	case "dup2":
		return 33
	case "pause":
		return 34
	case "nanosleep":
		return 35
	case "getitimer":
		return 36
	case "alarm":
		return 37
	case "setitimer":
		return 38
	case "getpid":
		return 39
	case "sendfile":
		return 40
	case "socket":
		return 41
	case "connect":
		return 42
	case "accept":
		return 43
	case "sendto":
		return 44
	case "recvfrom":
		return 45
	case "sendmsg":
		return 46
	case "recvmsg":
		return 47
	case "shutdown":
		return 48
	case "bind":
		return 49
	case "listen":
		return 50
	case "getsockname":
		return 51
	case "getpeername":
		return 52
	case "socketpair":
		return 53
	case "setsockopt":
		return 54
	case "getsockopt":
		return 55
	case "clone":
		return 56
	case "fork":
		return 57
	case "vfork":
		return 58
	case "execve":
		return 59
	case "exit":
		return 60
	case "wait4":
		return 61
	case "kill":
		return 62
	case "uname":
		return 63
	case "semget":
		return 64
	case "semop":
		return 65
	case "semctl":
		return 66
	case "shmdt":
		return 67
	case "msgget":
		return 68
	case "msgsnd":
		return 69
	case "msgrcv":
		return 70
	case "msgctl":
		return 71
	case "fcntl":
		return 72
	case "flock":
		return 73
	case "fsync":
		return 74
	case "fdatasync":
		return 75
	case "truncate":
		return 76
	case "ftruncate":
		return 77
	case "getdents":
		return 78
	case "getcwd":
		return 79
	case "chdir":
		return 80
	case "fchdir":
		return 81
	case "rename":
		return 82
	case "mkdir":
		return 83
	case "rmdir":
		return 84
	case "creat":
		return 85
	case "link":
		return 86
	case "unlink":
		return 87
	case "symlink":
		return 88
	case "readlink":
		return 89
	case "chmod":
		return 90
	case "fchmod":
		return 91
	case "chown":
		return 92
	case "fchown":
		return 93
	case "lchown":
		return 94
	case "umask":
		return 95
	case "gettimeofday":
		return 96
	case "getrlimit":
		return 97
	case "getrusage":
		return 98
	case "sysinfo":
		return 99
	case "times":
		return 100
	case "ptrace":
		return 101
	case "getuid":
		return 102
	case "syslog":
		return 103
	case "getgid":
		return 104
	case "setuid":
		return 105
	case "setgid":
		return 106
	case "geteuid":
		return 107
	case "getegid":
		return 108
	case "setpgid":
		return 109
	case "getppid":
		return 110
	case "getpgrp":
		return 111
	case "setsid":
		return 112
	case "setreuid":
		return 113
	case "setregid":
		return 114
	case "getgroups":
		return 115
	case "setgroups":
		return 116
	case "setresuid":
		return 117
	case "getresuid":
		return 118
	case "setresgid":
		return 119
	case "getresgid":
		return 120
	case "getpgid":
		return 121
	case "setfsuid":
		return 122
	case "setfsgid":
		return 123
	case "getsid":
		return 124
	case "capget":
		return 125
	case "capset":
		return 126
	case "rt_sigpending":
		return 127
	case "rt_sigtimedwait":
		return 128
	case "rt_sigqueueinfo":
		return 129
	case "rt_sigsuspend":
		return 130
	case "sigaltstack":
		return 131
	case "utime":
		return 132
	case "mknod":
		return 133
	case "uselib":
		return 134
	case "personality":
		return 135
	case "ustat":
		return 136
	case "statfs":
		return 137
	case "fstatfs":
		return 138
	case "sysfs":
		return 139
	case "getpriority":
		return 140
	case "setpriority":
		return 141
	case "sched_setparam":
		return 142
	case "sched_getparam":
		return 143
	case "sched_setscheduler":
		return 144
	case "sched_getscheduler":
		return 145
	case "sched_get_priority_max":
		return 146
	case "sched_get_priority_min":
		return 147
	case "sched_rr_get_interval":
		return 148
	case "mlock":
		return 149
	case "munlock":
		return 150
	case "mlockall":
		return 151
	case "munlockall":
		return 152
	case "vhangup":
		return 153
	case "modify_ldt":
		return 154
	case "pivot_root":
		return 155
	case "_sysctl":
		return 156
	case "prctl":
		return 157
	case "arch_prctl":
		return 158
	case "adjtimex":
		return 159
	case "setrlimit":
		return 160
	case "chroot":
		return 161
	case "sync":
		return 162
	case "acct":
		return 163
	case "settimeofday":
		return 164
	case "mount":
		return 165
	case "umount2":
		return 166
	case "swapon":
		return 167
	case "swapoff":
		return 168
	case "reboot":
		return 169
	case "sethostname":
		return 170
	case "setdomainname":
		return 171
	case "iopl":
		return 172
	case "ioperm":
		return 173
	case "create_module":
		return 174
	case "init_module":
		return 175
	case "delete_module":
		return 176
	case "get_kernel_syms":
		return 177
	case "query_module":
		return 178
	case "quotactl":
		return 179
	case "nfsservctl":
		return 180
	case "getpmsg":
		return 181
	case "putpmsg":
		return 182
	case "afs_":
		return 183
	case "tuxcall":
		return 184
	case "security":
		return 185
	case "gettid":
		return 186
	case "readahead":
		return 187
	case "setxattr":
		return 188
	case "lsetxattr":
		return 189
	case "fsetxattr":
		return 190
	case "getxattr":
		return 191
	case "lgetxattr":
		return 192
	case "fgetxattr":
		return 193
	case "listxattr":
		return 194
	case "llistxattr":
		return 195
	case "flistxattr":
		return 196
	case "removexattr":
		return 197
	case "lremovexattr":
		return 198
	case "fremovexattr":
		return 199
	case "tkill":
		return 200
	case "time":
		return 201
	case "futex":
		return 202
	case "sched_setaffinity":
		return 203
	case "sched_getaffinity":
		return 204
	case "set_thread_area":
		return 205
	case "io_setup":
		return 206
	case "io_destroy":
		return 207
	case "io_getevents":
		return 208
	case "io_submit":
		return 209
	case "io_cancel":
		return 210
	case "get_thread_area":
		return 211
	case "lookup_dcookie":
		return 212
	case "epoll_create":
		return 213
	case "epoll_ctl_old":
		return 214
	case "epoll_wait_old":
		return 215
	case "remap_file_pages":
		return 216
	case "getdents64":
		return 217
	case "set_tid_address":
		return 218
	case "restart_":
		return 219
	case "semtimedop":
		return 220
	case "fadvise64":
		return 221
	case "timer_create":
		return 222
	case "timer_settime":
		return 223
	case "timer_gettime":
		return 224
	case "timer_getoverrun":
		return 225
	case "timer_delete":
		return 226
	case "clock_settime":
		return 227
	case "clock_gettime":
		return 228
	case "clock_getres":
		return 229
	case "clock_nanosleep":
		return 230
	case "exit_group":
		return 231
	case "epoll_wait":
		return 232
	case "epoll_ctl":
		return 233
	case "tgkill":
		return 234
	case "utimes":
		return 235
	case "vserver":
		return 236
	case "mbind":
		return 237
	case "set_mempolicy":
		return 238
	case "get_mempolicy":
		return 239
	case "mq_open":
		return 240
	case "mq_unlink":
		return 241
	case "mq_timedsend":
		return 242
	case "mq_timedreceive":
		return 243
	case "mq_notify":
		return 244
	case "mq_getsetattr":
		return 245
	case "kexec_load":
		return 246
	case "waitid":
		return 247
	case "add_key":
		return 248
	case "request_key":
		return 249
	case "keyctl":
		return 250
	case "ioprio_set":
		return 251
	case "ioprio_get":
		return 252
	case "inotify_init":
		return 253
	case "inotify_add_watch":
		return 254
	case "inotify_rm_watch":
		return 255
	case "migrate_pages":
		return 256
	case "openat":
		return 257
	case "mkdirat":
		return 258
	case "mknodat":
		return 259
	case "fchownat":
		return 260
	case "futimesat":
		return 261
	case "newfstatat":
		return 262
	case "unlinkat":
		return 263
	case "renameat":
		return 264
	case "linkat":
		return 265
	case "symlinkat":
		return 266
	case "readlinkat":
		return 267
	case "fchmodat":
		return 268
	case "faccessat":
		return 269
	case "pselect6":
		return 270
	case "ppoll":
		return 271
	case "unshare":
		return 272
	case "set_robust_list":
		return 273
	case "get_robust_list":
		return 274
	case "splice":
		return 275
	case "tee":
		return 276
	case "sync_file_range":
		return 277
	case "vmsplice":
		return 278
	case "move_pages":
		return 279
	case "utimensat":
		return 280
	case "epoll_pwait":
		return 281
	case "signalfd":
		return 282
	case "timerfd_create":
		return 283
	case "eventfd":
		return 284
	case "fallocate":
		return 285
	case "timerfd_settime":
		return 286
	case "timerfd_gettime":
		return 287
	case "accept4":
		return 288
	case "signalfd4":
		return 289
	case "eventfd2":
		return 290
	case "epoll_create1":
		return 291
	case "dup3":
		return 292
	case "pipe2":
		return 293
	case "inotify_init1":
		return 294
	case "preadv":
		return 295
	case "pwritev":
		return 296
	case "rt_tgsigqueueinfo":
		return 297
	case "perf_event_open":
		return 298
	case "recvmmsg":
		return 299
	case "fanotify_init":
		return 300
	case "fanotify_mark":
		return 301
	case "prlimit64":
		return 302
	case "name_to_handle_at":
		return 303
	case "open_by_handle_at":
		return 304
	case "clock_adjtime":
		return 305
	case "syncfs":
		return 306
	case "sendmmsg":
		return 307
	case "setns":
		return 308
	case "getcpu":
		return 309
	case "process_vm_readv":
		return 310
	case "process_vm_writev":
		return 311
	case "kcmp":
		return 312
	case "finit_module":
		return 313
	case "sched_setattr":
		return 314
	case "sched_getattr":
		return 315
	case "renameat2":
		return 316
	case "seccomp":
		return 317
	case "getrandom":
		return 318
	case "memfd_create":
		return 319
	case "kexec_file_load":
		return 320
	case "bpf":
		return 321
	case "execveat":
		return 322
	case "userfaultfd":
		return 323
	case "membarrier":
		return 324
	case "mlock2":
		return 325
	case "copy_file_range":
		return 326
	default:
		return -1
	}
}
